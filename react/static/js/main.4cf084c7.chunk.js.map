{"version":3,"sources":["components/Actions.jsx","components/Toggle.jsx","components/Item.jsx","components/List.jsx","components/FormAddItem.jsx","components/Index.jsx","store/reducers/items.js","store/constants/items.js","store/reducers/index.js","store/constants/actionTypes.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["connect","_ref","_ref$dispatch","dispatch","btnClass","react_default","a","createElement","className","onClick","type","Toggle","isList","onToggle","concat","Item","description","this","props","item","_this$props","number","title","attributes","length","map","attribute","i","key","renderDescription","_this$props2","style","height","margin","renderAsLine","renderAsCard","React","Component","state","items","components_Item","FormAddItem","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","setState","target","value","charCode","addAttribute","push","index","splice","_this$state","_this2","_this$state2","attributeItems","attr","removeAttribute","bind","htmlFor","id","onChange","onTitleChange","onAttributeChange","onBlur","onKeyPress","onAttributeKeyPress","onDescriptionChange","submit","Index","components_Actions","components_Toggle","components_List","components_FormAddItem","initialState","combineReducers","arguments","undefined","action","objectSpread","toConsumableArray","slice","createStore","reducer","App","es","store","components_Index","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4cf084c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Actions({ dispatch = () => {} }) {\r\n  const btnClass = 'btn btn--block';\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col m6 s12\">\r\n        <button\r\n          className={btnClass}\r\n          onClick={() => dispatch({ type: 'ADD_TO_TOP' })}\r\n        >Добавить в начало</button>\r\n      </div>\r\n      <div className=\"col m6 s12\">\r\n        <button\r\n          className={btnClass}\r\n          onClick={() => dispatch({ type: 'ADD_TO_END' })}\r\n        >Добавить в конец</button>\r\n      </div>\r\n      <div className=\"col m6 s12\">\r\n        <button\r\n          className={btnClass}\r\n          onClick={() => dispatch({ type: 'DELETE_FIRST' })}\r\n        >Удалить первый</button>\r\n      </div>\r\n      <div className=\"col m6 s12\">\r\n        <button\r\n          className={btnClass}\r\n          onClick={() => dispatch({ type: 'DELETE_LAST' })}\r\n        >Удалить последний</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(Actions);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Toggle ({ isList, onToggle }) {\r\n  return (\r\n    <div className=\"right-align\">\r\n      <button\r\n        className={`btn btn--icon ${isList ? '' : 'btn--flat'}`}\r\n        onClick={() => onToggle(true)}\r\n      >\r\n        <i className=\"material-icons\">list</i>\r\n      </button>\r\n      &nbsp;\r\n      <button\r\n        className={`btn btn--icon ${isList ? 'btn--flat' : ''}`}\r\n        onClick={() => onToggle(false)}\r\n      >\r\n        <i className=\"material-icons\">grid_on</i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nToggle.propTypes = {\r\n  isList: PropTypes.bool,\r\n  onToggle: PropTypes.func,\r\n};\r\n\r\nexport default Toggle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Item extends React.Component {\r\n  renderDescription() {\r\n    const { description } = this.props.item;\r\n\r\n    if (!description) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col s12\">\r\n        <div className=\"divider mt-0\"/>\r\n        {description}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAsLine() {\r\n    const { item, number } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s1 primary-text\">{number}</div>\r\n        <div className=\"col s3\">{item.title}</div>\r\n        <div className=\"col s8\">\r\n          <div className=\"row\">\r\n            {item.attributes && item.attributes.length\r\n              ? item.attributes.map((attribute, i) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"col s4\"\r\n                  >{attribute}</div>\r\n                );\r\n              })\r\n              : ''\r\n            }\r\n          </div>\r\n        </div>\r\n        {this.renderDescription()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAsCard() {\r\n    const { item, number } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s11\">{item.title}</div>\r\n        <div className=\"col s1 primary-text right-align\">{number}</div>\r\n        <div className=\"col s12\">\r\n          <div className=\"divider mt-0\"/>\r\n          <div className=\"row\">\r\n            {item.attributes && item.attributes.length\r\n              ? item.attributes.map((attribute, i) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"col s11 offset-s1\"\r\n                  >{attribute}</div>\r\n                );\r\n              })\r\n              : ''\r\n            }\r\n          </div>\r\n        </div>\r\n        {this.renderDescription()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isList } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"card grey lighten-4\"\r\n        style={{height: '100%', margin: 0}}\r\n      >\r\n        <div className=\"card__content\">\r\n          {isList ? this.renderAsLine() : this.renderAsCard()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nItem.propTypes = {\r\n  isList: PropTypes.bool,\r\n  item: PropTypes.object,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Item from './Item';\r\n\r\nfunction List({ items, isList }) {\r\n  return (\r\n    <div className=\"items\">\r\n      <div className=\"row\">\r\n        {items.length > 0\r\n          ? items.map((item, i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                className={`col s12 ${isList ? '' : 'm6 l4'}`}\r\n              >\r\n                <Item\r\n                  number={i + 1}\r\n                  item={item}\r\n                  isList={isList}\r\n                />\r\n              </div>\r\n            );\r\n          })\r\n          : <div className=\"col s12 center-align\">Не найдено ни одного объекта</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  isList: PropTypes.bool,\r\n};\r\n\r\nfunction mapState(state) {\r\n  const { items } = state;\r\n\r\n  return items;\r\n}\r\n\r\nexport default connect(mapState)(List);\r\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass FormAddItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      attributes: [],\n      description: '',\n      attribute: '',\n    };\n  }\n\n  onTitleChange(e) {\n    this.setState({ title: e.target.value });\n  }\n\n  onAttributeChange(e) {\n    this.setState({ attribute: e.target.value });\n  }\n\n  onAttributeKeyPress(e) {\n    if (e.charCode  === 13) {\n      this.addAttribute();\n    }\n  }\n\n  addAttribute() {\n    if (!this.state.attribute) {\n      return;\n    }\n    const { attributes } = this.state;\n    attributes.push(this.state.attribute);\n    this.setState({\n      attributes,\n      attribute: '',\n    });\n  }\n\n  removeAttribute(index) {\n    const { attributes } = this.state;\n    attributes.splice(index, 1);\n    this.setState({\n      attributes,\n    });\n  }\n\n  onDescriptionChange(e) {\n    this.setState({ description: e.target.value });\n  }\n\n  submit() {\n    const { title, attributes, description } = this.state;\n    if (!title) {\n      return;\n    }\n    this.props.dispatch({\n      type: 'ADD_TO_END',\n      item: {\n        title,\n        attributes,\n        description,\n      },\n    });\n    this.setState({\n      title: '',\n      attributes: [],\n      description: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      attributes,\n      description,\n      attribute,\n    } = this.state;\n\n    const attributeItems = attributes.map((attr, i) => (\n      <div key={i} className=\"chip\">\n        {attr}\n          <i\n            className=\"close material-icons\"\n            onClick={this.removeAttribute.bind(this, i)}\n          >close</i>\n      </div>\n    ));\n\n    return (\n      <div className=\"card\">\n        <div className=\"card__content\">\n          <h2 className=\"mt-0\">Добавить новый объект</h2>\n          <form>\n            <div className=\"input-field\">\n              <label htmlFor=\"title\">Заголовок *</label>\n              <input\n                id=\"title\"\n                type=\"text\"\n                value={title}\n                onChange={this.onTitleChange.bind(this)}\n              />\n            </div>\n            {attributeItems}\n            <div className=\"input-field\">\n              <label htmlFor=\"attribute\">Добавить пункт</label>\n              <input\n                id=\"attribute\"\n                type=\"text\"\n                value={attribute}\n                onChange={this.onAttributeChange.bind(this)}\n                onBlur={this.addAttribute.bind(this)}\n                onKeyPress={this.onAttributeKeyPress.bind(this)}\n              />\n            </div>\n            <div className=\"input-field\">\n              <label htmlFor=\"description\">Описание</label>\n              <input\n                id=\"description\"\n                type=\"text\"\n                value={description}\n                onChange={this.onDescriptionChange.bind(this)}\n              />\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={this.submit.bind(this)}\n            >Добавить</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(FormAddItem);\n","import React from 'react';\n\nimport Actions from './Actions';\nimport Toggle from './Toggle';\nimport List from './List';\nimport FormAddItem from './FormAddItem';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isList: true,\n    };\n  }\n\n  onToggle(isList) {\n    this.setState({\n      isList,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"container app\">\n        <h1>Ekaterina Gudova</h1>\n\n        <Actions/>\n        <div className=\"divider\"/>\n        <div className=\"row align-center\">\n          <div className=\"col m8\">\n            <h2 className=\"mt-0 mb-0\">Список объектов</h2>\n          </div>\n          <div className=\"col m4\">\n            <Toggle\n              isList={this.state.isList}\n              onToggle={(e) => this.onToggle(e)}\n            />\n          </div>\n        </div>\n        <div className=\"divider\"/>\n        <List isList={this.state.isList}/>\n        <div className=\"divider\"/>\n        <FormAddItem/>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n","import {\n  ADD_TO_TOP,\n  ADD_TO_END,\n  DELETE_FIRST,\n  DELETE_LAST,\n} from '../constants/actionTypes';\nimport items from '../constants/items';\n\nconst initialState = {\n  items,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case ADD_TO_TOP:\n      return {\n        ...state,\n        items: state.items[state.items.length - 1] ? [\n          state.items[state.items.length - 1],\n          ...state.items,\n        ] : state.items,\n      };\n    case ADD_TO_END:\n      return {\n        ...state,\n        items: action.item || state.items[0] ? [\n          ...state.items,\n          action.item || state.items[0] || undefined,\n        ] : state.items,\n      };\n    case DELETE_FIRST:\n      return {\n        ...state,\n        items: state.items.slice(1),\n      };\n    case DELETE_LAST:\n      return {\n        ...state,\n        items: state.items.slice(0, state.items.length - 1),\n      };\n    default:\n      return state;\n  }\n};\n","export default [\n  {\n    title: 'Заголовок 1',\n    attributes: ['Пункт 1.1', 'Пункт 1.2', 'Пункт 1.3'],\n    description: 'Описание 1 блока'\n  },\n  {\n    title: 'Заголовок 2',\n    attributes: ['Пункт 2.1', 'Пункт 2.2'],\n    description: 'Описание 2 блока'\n  },\n  {\n    title: 'Заголовок 3',\n    attributes: ['Пункт 3.1', 'Пункт 3.2', 'Пункт 3.3'],\n    description: 'Описание 3 блока'\n  },\n  {\n    title: 'Заголовок 4',\n    attributes: ['Пункт 4.1', 'Пункт 4.2', 'Пункт 4.3', 'Пункт 4.4', 'Пункт 4.5'],\n    description: 'Описание 4 блока'\n  },\n  {\n    title: 'Заголовок 5',\n    attributes: ['Пункт 5.1'],\n    description: 'Описание 5 блока'\n  },\n  {\n    title: 'Заголовок 6',\n    attributes: ['Пункт 6.1', 'Пункт 6.2', 'Пункт 6.3'],\n    description: 'Описание 6 блока'\n  },\n];\n","import { combineReducers } from 'redux';\nimport items from './items';\n\nexport default combineReducers({\n  items,\n});\n","export const ADD_TO_TOP = 'ADD_TO_TOP';\nexport const ADD_TO_END = 'ADD_TO_END';\nexport const DELETE_FIRST = 'DELETE_FIRST';\nexport const DELETE_LAST = 'DELETE_LAST';\n","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nexport default createStore(reducer);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport './style/style.scss';\nimport Index from './components/Index';\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Index/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}