{"version":3,"sources":["components/Actions.jsx","components/Toggle.jsx","components/Item.jsx","components/List.jsx","components/Index.jsx","store/reducers/items.js","store/constants/items.js","store/reducers/index.js","store/constants/actionTypes.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["connect","_ref","_ref$dispatch","dispatch","btnClass","btnStyle","width","react_default","a","createElement","className","style","onClick","type","Toggle","isList","onToggle","concat","Item","description","this","props","item","_this$props","number","title","attributes","length","map","attribute","i","key","renderDescription","_this$props2","height","margin","renderAsLine","renderAsCard","React","Component","state","items","components_Item","Index","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","_this2","components_Actions","components_Toggle","e","components_List","initialState","combineReducers","arguments","undefined","objectSpread","toConsumableArray","slice","createStore","reducer","App","es","store","components_Index","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a42e81fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction Actions({ dispatch = () => {} }) {\r\n  const btnClass = 'waves-effect waves-light btn-small';\r\n  const btnStyle = { width: '100%' };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col m6 s12\">\r\n        <button\r\n          className={btnClass}\r\n          style={btnStyle}\r\n          onClick={() => dispatch({ type: 'ADD_TO_TOP' })}\r\n        >Добавить в начало</button>\r\n      </div>\r\n      <div className=\"col m6 s12\">\r\n        <button\r\n          className={btnClass}\r\n          style={btnStyle}\r\n          onClick={() => dispatch({ type: 'ADD_TO_END' })}\r\n        >Добавить в конец</button>\r\n      </div>\r\n      <div className=\"col m6 s12\">\r\n        <button\r\n          className={btnClass}\r\n          style={btnStyle}\r\n          onClick={() => dispatch({ type: 'DELETE_FIRST' })}\r\n        >Удалить первый</button>\r\n      </div>\r\n      <div className=\"col m6 s12\">\r\n        <button\r\n          className={btnClass}\r\n          style={btnStyle}\r\n          onClick={() => dispatch({ type: 'DELETE_LAST' })}\r\n        >Удалить последний</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect()(Actions);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Toggle ({ isList, onToggle }) {\r\n  return (\r\n    <div className=\"right-align\">\r\n      <button\r\n        className={`waves-effect waves-teal btn ${isList ? '' : 'btn-flat'}`}\r\n        onClick={() => onToggle(true)}\r\n      >\r\n        <i className=\"material-icons\">list</i>\r\n      </button>\r\n      &nbsp;\r\n      <button\r\n        className={`waves-effect waves-teal btn ${isList ? 'btn-flat' : ''}`}\r\n        onClick={() => onToggle(false)}\r\n      >\r\n        <i className=\"material-icons\">grid_on</i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nToggle.propTypes = {\r\n  isList: PropTypes.bool,\r\n  onToggle: PropTypes.func,\r\n};\r\n\r\nexport default Toggle;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Item extends React.Component {\r\n  renderDescription() {\r\n    const { description } = this.props.item;\r\n\r\n    if (!description) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"col s12\">\r\n        <div className=\"divider mt-0\"/>\r\n        {description}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAsLine() {\r\n    const { item, number } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s1 teal-text\">{number}</div>\r\n        <div className=\"col s3\">{item.title}</div>\r\n        <div className=\"col s8\">\r\n          <div className=\"row\">\r\n            {item.attributes && item.attributes.length\r\n              ? item.attributes.map((attribute, i) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"col s4\"\r\n                  >{attribute}</div>\r\n                );\r\n              })\r\n              : ''\r\n            }\r\n          </div>\r\n        </div>\r\n        {this.renderDescription()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAsCard() {\r\n    const { item, number } = this.props;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col s11\">{item.title}</div>\r\n        <div className=\"col s1 teal-text right-align\">{number}</div>\r\n        <div className=\"col s12\">\r\n          <div className=\"divider mt-0\"/>\r\n          <div className=\"row\">\r\n            {item.attributes && item.attributes.length\r\n              ? item.attributes.map((attribute, i) => {\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"col s11 offset-s1\"\r\n                  >{attribute}</div>\r\n                );\r\n              })\r\n              : ''\r\n            }\r\n          </div>\r\n        </div>\r\n        {this.renderDescription()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isList } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className=\"card grey lighten-4\"\r\n        style={{height: '100%', margin: 0}}\r\n      >\r\n        <div className=\"card-content\">\r\n          {isList ? this.renderAsLine() : this.renderAsCard()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nItem.propTypes = {\r\n  isList: PropTypes.bool,\r\n  item: PropTypes.object,\r\n  number: PropTypes.number,\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Item from './Item';\r\n\r\nfunction List({ items, isList }) {\r\n  return (\r\n    <div className=\"items\">\r\n      <div className=\"row\">\r\n        {items.length > 0\r\n          ? items.map((item, i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                className={`col s12 ${isList ? '' : 'm6 l4'}`}\r\n              >\r\n                <Item\r\n                  number={i + 1}\r\n                  item={item}\r\n                  isList={isList}\r\n                />\r\n              </div>\r\n            );\r\n          })\r\n          : <div className=\"col s12 center-align\">Не найдено ни одного объекта</div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  isList: PropTypes.bool,\r\n};\r\n\r\nfunction mapState(state) {\r\n  const { items } = state;\r\n\r\n  return items;\r\n}\r\n\r\nexport default connect(mapState)(List);\r\n","import React from 'react';\r\n\r\nimport Actions from './Actions';\r\nimport Toggle from './Toggle';\r\nimport List from './List';\r\n\r\nclass Index extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isList: true,\r\n    };\r\n  }\r\n\r\n  onToggle(isList) {\r\n    this.setState({\r\n      isList,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container app\">\r\n        <h2>Ekaterina Gudova</h2>\r\n\r\n        <Actions/>\r\n        <div className=\"divider\"/>\r\n        <div className=\"row align-center\">\r\n          <div className=\"col m8\">\r\n            <h5 className=\"mt-0 mb-0\">Список объектов</h5>\r\n          </div>\r\n          <div className=\"col m4\">\r\n            <Toggle\r\n              isList={this.state.isList}\r\n              onToggle={(e) => this.onToggle(e)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"divider\"/>\r\n        <List isList={this.state.isList}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import {\r\n  ADD_TO_TOP,\r\n  ADD_TO_END,\r\n  DELETE_FIRST,\r\n  DELETE_LAST,\r\n} from '../constants/actionTypes';\r\nimport items from '../constants/items';\r\n\r\nconst initialState = {\r\n  items,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_TO_TOP:\r\n      return {\r\n        ...state,\r\n        items: !state.items.length ? [] : [\r\n          state.items[state.items.length - 1],\r\n          ...state.items,\r\n        ],\r\n      };\r\n    case ADD_TO_END:\r\n      return {\r\n        ...state,\r\n        items: !state.items.length ? [] : [\r\n          ...state.items,\r\n          state.items[0],\r\n        ],\r\n      };\r\n    case DELETE_FIRST:\r\n      return {\r\n        ...state,\r\n        items: state.items.slice(1),\r\n      };\r\n    case DELETE_LAST:\r\n      return {\r\n        ...state,\r\n        items: state.items.slice(0, state.items.length - 1),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default [\r\n  {\r\n    title: 'Заголовок 1',\r\n    attributes: ['Пункт 1.1', 'Пункт 1.2', 'Пункт 1.3'],\r\n    description: 'Описание 1 блока'\r\n  },\r\n  {\r\n    title: 'Заголовок 2',\r\n    attributes: ['Пункт 2.1', 'Пункт 2.2'],\r\n    description: 'Описание 2 блока'\r\n  },\r\n  {\r\n    title: 'Заголовок 3',\r\n    attributes: ['Пункт 3.1', 'Пункт 3.2', 'Пункт 3.3'],\r\n    description: 'Описание 3 блока'\r\n  },\r\n  {\r\n    title: 'Заголовок 4',\r\n    attributes: ['Пункт 4.1', 'Пункт 4.2', 'Пункт 4.3', 'Пункт 4.4', 'Пункт 4.5'],\r\n    description: 'Описание 4 блока'\r\n  },\r\n  {\r\n    title: 'Заголовок 5',\r\n    attributes: ['Пункт 5.1'],\r\n    description: 'Описание 5 блока'\r\n  },\r\n  {\r\n    title: 'Заголовок 6',\r\n    attributes: ['Пункт 6.1', 'Пункт 6.2', 'Пункт 6.3'],\r\n    description: 'Описание 6 блока'\r\n  },\r\n];\r\n","import { combineReducers } from 'redux';\r\nimport items from './items';\r\n\r\nexport default combineReducers({\r\n  items,\r\n});\r\n","export const ADD_TO_TOP = 'ADD_TO_TOP';\r\nexport const ADD_TO_END = 'ADD_TO_END';\r\nexport const DELETE_FIRST = 'DELETE_FIRST';\r\nexport const DELETE_LAST = 'DELETE_LAST';\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\nexport default createStore(reducer);\r\n","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport './style/style.scss';\r\nimport Index from './components/Index';\r\nimport store from './store';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Index/>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}